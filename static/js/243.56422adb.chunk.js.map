{"version":3,"file":"static/js/243.56422adb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/FormContacts/FormContacts.styled.jsx","components/FormContacts/FormContacts.jsx","components/ListContacts/ListContacts.styled.jsx","components/ItemContact/ItemContact.styled.js","components/ItemContact/ItemContact.js","components/InputFilter/InputFilter.styled.jsx","components/InputFilter/InputFilter.jsx","components/ListContacts/ListContacts.jsx","components/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const FormData = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n\n  font-size: 24px;\n  /* border: 1px solid black; */\n`;\n\nexport const InputForm = styled(Field)`\n  display: block;\n  padding: 10px 10px;\n  width: 300px;\n  background-color: white;\n  border: 2px solid #4169e1;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 2px solid yellow;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  margin-bottom: 20px;\n  color: #4169e1;\n  font: 0.7em 'typewriter', sans-serif;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n// import 'yup-phone';\nimport styled from 'styled-components';\nimport { Label, InputForm, FormData } from './FormContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts, getIsLoading } from 'redux/contacts/selectors';\nimport { Button } from '@chakra-ui/button';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().min(13).max(13).required(),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ErrorText = styled.p`\n  font: 0.6em 'typewriter', sans-serif;\n  color: red;\n  margin-top: 5px;\n`;\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const allContacts = useSelector(getContacts);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    if (allContacts.some(item => item.name === contact.name)) {\n      alert(`Contact ${contact.name} already exist`);\n      return;\n    }\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormData>\n        <Label>\n          Name\n          <br />\n          <InputForm type=\"text\" name=\"name\" placeholder=\"Rosie Simpson\" />\n          <FormError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <br />\n          <InputForm type=\"tel\" name=\"number\" placeholder=\"+380673454545\" />\n          <FormError name=\"number\" component=\"div\" />\n        </Label>\n        {isLoading ? (\n          <Button isLoading colorScheme=\"blue\" variant=\"solid\">\n            Submit\n          </Button>\n        ) : (\n          <Button type=\"submit\" colorScheme=\"blue\" variant=\"solid\">\n            ADD CONTACT\n          </Button>\n        )}\n      </FormData>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ol`\n  display: block;\n  list-style-type: lower-greek;\n  margin: 0;\n  padding: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n\n  border: 2px solid yellow;\n  padding: 5px;\n`;\n\nexport const DataContact = styled.p`\n  display: flex;\n  font-size: 18px;\n  margin: 0 auto 0 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px 10px;\n  background-color: white;\n  border: 2px solid #4169e1;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 2px solid yellow;\n  }\n`;\n\nexport const Text = styled.span`\n  margin-right: 30px;\n  margin-left: 10px;\n`;\n","import { useState } from 'react';\nimport { Item, DataContact, Input, Text } from './ItemContact.styled';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { IconButton } from '@chakra-ui/button';\nimport { DeleteIcon, CheckIcon, EditIcon } from '@chakra-ui/icons';\n\nconst ItemContact = ({ id, name: nameValue, number: numberValue, onClick }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameValue);\n  const [number, setNumber] = useState(numberValue);\n  const dispatch = useDispatch();\n\n  const handleChangeMode = () => {\n    if (isEdit) {\n      setIsEdit(prev => !prev);\n      dispatch(editContact({ id, name, number }));\n      return;\n    }\n    setIsEdit(prev => !prev);\n  };\n\n  const handleChange = evt => {\n    switch (evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        return;\n      case 'number':\n        setNumber(evt.target.value);\n        return;\n\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <Item>\n        <DataContact>\n          {isEdit ? (\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          ) : (\n            <span>{name}</span>\n          )}\n          :\n          {isEdit ? (\n            <Input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n            />\n          ) : (\n            <Text>{number}</Text>\n          )}\n        </DataContact>\n        <IconButton\n          colorScheme=\"blue\"\n          aria-label=\"Delete\"\n          size=\"sm\"\n          icon={<DeleteIcon />}\n          onClick={onClick}\n        />\n\n        <IconButton\n          colorScheme=\"blue\"\n          aria-label=\"Delete\"\n          size=\"sm\"\n          icon={isEdit ? <CheckIcon /> : <EditIcon />}\n          onClick={handleChangeMode}\n        />\n      </Item>\n    </>\n  );\n};\n\nexport default ItemContact;\n","import styled from 'styled-components';\n\nexport const Thumb = styled.div`\n  display: block;\n\n  text-align: left;\n  width: 300px;\n  margin-bottom: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\nimport { Input } from '@chakra-ui/input';\n\nimport { Thumb } from './InputFilter.styled';\n\nimport { getFilter } from 'redux/contacts/selectors';\n\nconst InputFilter = () => {\n  const dispatch = useDispatch();\n\n  const value = useSelector(getFilter);\n  return (\n    <Thumb>\n      <Input\n        variant=\"flushed\"\n        placeholder=\"Find contacts by name\"\n        _placeholder={{ opacity: 1, color: 'gray.500' }}\n        type=\"text\"\n        onChange={e => {\n          dispatch(setFilterValue(e.target.value));\n        }}\n        value={value}\n      />\n    </Thumb>\n  );\n};\n\nexport default InputFilter;\n","import { List } from './ListContacts.styled';\nimport ItemContact from 'components/ItemContact/ItemContact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport InputFilter from 'components/InputFilter/InputFilter';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  const normalizedFilter = filterValue.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst ListContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filterValue);\n\n  return (\n    <>\n      <InputFilter />\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ItemContact\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ListContacts;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"blue\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { FormContacts } from 'components/FormContacts/FormContacts';\nimport ListContacts from 'components/ListContacts/ListContacts';\nimport { Loader } from 'components/Loader';\nimport { GiBookmarklet } from 'react-icons/gi';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: 0,\n          marginBottom: 0,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          maxWidth: 1280,\n          minHeight: 600,\n          fontSize: 45,\n          color: '#010101',\n          paddingBottom: 60,\n        }}\n      >\n        <h1\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: 20,\n            marginBottom: 10,\n            marginRight: 'auto',\n            marginLeft: 'auto',\n            fontWeight: '700',\n          }}\n        >\n          PHONEBOOK\n          <GiBookmarklet style={{ marginLeft: 5 }} />\n        </h1>\n        <FormContacts />\n        <h2 style={{ fontSize: 36 }}>Contacts list</h2>\n\n        {isLoading && <Loader />}\n        {error && <b>Something went wrong, please reload the page</b>}\n        <ListContacts />\n      </div>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","FormData","styled","Form","InputForm","Field","Label","schema","yup","shape","name","required","number","min","max","initialValues","ErrorText","FormError","render","message","FormContacts","dispatch","useDispatch","useSelector","allContacts","validationSchema","onSubmit","contact","resetForm","some","item","alert","addContact","type","placeholder","component","colorScheme","variant","List","Item","DataContact","Input","Text","id","nameValue","numberValue","onClick","useState","isEdit","setIsEdit","setName","setNumber","handleChange","evt","target","value","onChange","size","icon","prev","editContact","Thumb","I","_placeholder","opacity","color","e","setFilterValue","filteredContacts","filterValue","normalizedFilter","toLocaleLowerCase","includes","getFilteredContacts","map","deleteContact","Loader","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","justifyContent","marginTop","marginBottom","marginRight","marginLeft","maxWidth","minHeight","fontSize","paddingBottom","fontWeight"],"sourceRoot":""}