{"version":3,"file":"static/js/162.47c45248.chunk.js","mappings":"2OAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEhBC,EAAY,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,uCCJjBC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uIAORE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uVAiBTI,EAAQJ,EAAAA,GAAAA,MAAH,4GAKLK,EAAML,EAAAA,GAAAA,OAAH,sY,SCvBVM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAG/BI,EAAgB,CAAEL,KAAM,GAAIE,MAAO,IAE5BI,EAAYf,EAAAA,GAAAA,EAAH,oGAMhBgB,EAAY,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNQ,OAAQ,SAAAC,GAAO,OAAI,SAACH,EAAD,UAAYG,GAAhB,GAGpB,EAEYC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,IAAYlC,GAahC,OACE,SAAC,KAAD,CACEyB,cAAeA,EACfU,iBAAkBlB,EAClBmB,SAfiB,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UAG3BL,EAAYM,MAAK,SAAAC,GAAI,OAAIA,EAAKpB,OAASiB,EAAQjB,IAA1B,IACvBqB,MAAM,WAAD,OAAYJ,EAAQjB,KAApB,oBAGPW,GAASW,EAAAA,EAAAA,IAAWL,IACpBC,IACD,EAGC,UAKE,UAAC5B,EAAD,YACE,UAACK,EAAD,mBAEE,mBACA,SAACF,EAAD,CAAW8B,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,mBAC/C,SAACjB,EAAD,CAAWP,KAAK,OAAOyB,UAAU,YAEnC,UAAC9B,EAAD,qBAEE,mBACA,SAACF,EAAD,CAAW8B,KAAK,MAAMvB,KAAK,QAAQwB,YAAY,eAC/C,SAACjB,EAAD,CAAWP,KAAK,QAAQyB,UAAU,YAEpC,SAAC7B,EAAD,CAAK2B,KAAK,SAAV,6BAIP,E,UCnEYG,EAAQnC,EAAAA,GAAAA,MAAH,uVAiBLI,EAAQJ,EAAAA,GAAAA,MAAH,4GCQlB,EApBoB,WAClB,IAAMoB,GAAWC,EAAAA,EAAAA,MACXe,GAAQb,EAAAA,EAAAA,IAAY1B,GAC1B,OACE,+BACE,UAAC,EAAD,oCAEE,mBACA,SAACsC,EAAD,CACEH,KAAK,OACLK,SAAU,SAAAC,GACRlB,GAASmB,EAAAA,EAAAA,GAAeD,EAAEE,OAAOJ,OAClC,EACDA,MAAOA,QAKhB,ECvBYK,EAAOzC,EAAAA,GAAAA,GAAH,kEAKJ0C,EAAO1C,EAAAA,GAAAA,GAAH,6FAOJ2C,EAAc3C,EAAAA,GAAAA,EAAH,0DAKX4C,EAAY5C,EAAAA,GAAAA,OAAH,+aCoBtB,EA3BqB,WACnB,IAAMoB,GAAWC,EAAAA,EAAAA,MAGXwB,EAXoB,SAACtD,EAAUuD,GACrC,IAAMC,EAAmBD,EAAYE,oBACrC,OAAOzD,EAASO,QAAO,SAAA4B,GAAO,OAC5BA,EAAQjB,KAAKuC,oBAAoBC,SAASF,EADd,GAG/B,CAM0BG,EAFR3B,EAAAA,EAAAA,IAAYlC,IACTkC,EAAAA,EAAAA,IAAY1B,IAGhC,OACE,SAAC6C,EAAD,UACGG,EAAiBM,KAAI,gBAAGC,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACpB,UAAC8B,EAAD,YACE,UAACE,EAAD,YACE,0BAAOlC,IADT,MACuB,0BAAOE,QAE9B,SAACiC,EAAD,CACEZ,KAAK,SACLqB,QAAS,WACPjC,GAASkC,EAAAA,EAAAA,IAAcF,GACxB,EAJH,sBAJSA,EADS,KAiB3B,E,UCnCYG,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,ECNc,SAASC,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MAEX3B,GAAY6B,EAAAA,EAAAA,IAAY9B,GAExBG,GAAQ2B,EAAAA,EAAAA,IAAY5B,GAM1B,OAJAsE,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACV,GAAE,CAAC9C,KAGF,iBACE+C,MAAO,CACLX,OAAQ,QACRC,MAAO,QACPW,QAAS,QAETC,YAAa,IAEbC,SAAU,GACVX,MAAO,WATX,WAYE,uCAEA,SAACxC,EAAD,KACA,sCACA,SAAC,EAAD,IACCzB,IAAa,SAAC6D,EAAD,IACb3D,IAAS,yEACV,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/FormContacts/FormContacts.styled.jsx","components/FormContacts/FormContacts.jsx","components/InputFilter/InputFilter.styled.jsx","components/InputFilter/InputFilter.jsx","components/ListContacts/ListContacts.styled.jsx","components/ListContacts/ListContacts.jsx","components/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const FormData = styled(Form)`\n  display: block;\n  border: 1px solid black;\n  padding: 20px 200px 20px 30px;\n  background-color: #c0c0c0;\n`;\n\nexport const InputForm = styled(Field)`\n  display: block;\n  padding: 10px 10px;\n  background-color: white;\n  border: 1px solid black;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 2px solid #4169e1;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font: 0.8em 'typewriter', sans-serif;\n`;\nexport const Btn = styled.button`\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  display: inline-block;\n  padding: 1px 15px;\n  color: black;\n  border: 1px solid #0000ff;\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-size: 24px;\n\n  &:hover,\n  &:focus {\n    background-color: #4682b4;\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { Btn, Label, InputForm, FormData } from './FormContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  phone: yup.string().min(9).max(12).required(),\n});\n\nconst initialValues = { name: '', phone: '' };\n\nexport const ErrorText = styled.p`\n  font: 0.6em 'typewriter', sans-serif;\n  color: red;\n  margin-top: 5px;\n`;\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n\n  const allContacts = useSelector(getContacts);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    // e.preventDefault();\n\n    if (allContacts.some(item => item.name === contact.name)) {\n      alert(`Contact ${contact.name} already exist`);\n      return;\n    }\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormData>\n        <Label>\n          Name\n          <br />\n          <InputForm type=\"text\" name=\"name\" placeholder=\"Rosie Simpson\" />\n          <FormError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <br />\n          <InputForm type=\"tel\" name=\"phone\" placeholder=\"345-45-45\" />\n          <FormError name=\"phone\" component=\"div\" />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </FormData>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px 10px;\n  background-color: white;\n  border: 1px solid black;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 2px solid #4169e1;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font: 0.8em 'typewriter', sans-serif;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nimport { Label } from './InputFilter.styled';\nimport { Input } from './InputFilter.styled';\nimport { getFilter } from 'redux/contacts/selectors';\n\nconst InputFilter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  return (\n    <>\n      <Label>\n        Find contacts by name\n        <br />\n        <Input\n          type=\"text\"\n          onChange={e => {\n            dispatch(setFilterValue(e.target.value));\n          }}\n          value={value}\n        />\n      </Label>\n    </>\n  );\n};\n\nexport default InputFilter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DataContact = styled.p`\n  font-size: 22px;\n  margin: 0;\n`;\n\nexport const BtnDelete = styled.button`\n  display: block;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  display: inline-block;\n  padding: 1px 15px;\n  margin-left: auto;\n  color: black;\n  border: 1px solid #0000ff;\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-size: 18px;\n\n  &:hover,\n  &:focus {\n    background-color: #4682b4;\n  }\n`;\n","import { Item, List, DataContact, BtnDelete } from './ListContacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  const normalizedFilter = filterValue.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst ListContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filterValue);\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, phone }) => (\n        <Item key={id}>\n          <DataContact>\n            <span>{name}</span>: <span>{phone}</span>\n          </DataContact>\n          <BtnDelete\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </BtnDelete>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ListContacts;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"blue\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { FormContacts } from 'components/FormContacts/FormContacts';\nimport InputFilter from 'components/InputFilter/InputFilter';\nimport ListContacts from 'components/ListContacts/ListContacts';\nimport { Loader } from 'components/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        width: '100vh',\n        display: 'block',\n\n        paddingLeft: 100,\n\n        fontSize: 24,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n\n      <FormContacts />\n      <h2>Contacts</h2>\n      <InputFilter />\n      {isLoading && <Loader />}\n      {error && <b>Something went wrong, please reload the page</b>}\n      <ListContacts />\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","FormData","styled","Form","InputForm","Field","Label","Btn","schema","yup","shape","name","required","phone","min","max","initialValues","ErrorText","FormError","render","message","FormContacts","dispatch","useDispatch","allContacts","useSelector","validationSchema","onSubmit","contact","resetForm","some","item","alert","addContact","type","placeholder","component","Input","value","onChange","e","setFilterValue","target","Item","List","DataContact","BtnDelete","filteredContacts","filterValue","normalizedFilter","toLocaleLowerCase","includes","getFilteredContacts","map","id","onClick","deleteContact","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Contacts","useEffect","fetchContacts","style","display","paddingLeft","fontSize"],"sourceRoot":""}