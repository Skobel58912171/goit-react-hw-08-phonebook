{"version":3,"file":"static/js/503.bda52ad4.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js","../node_modules/yup-password/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormData = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 320px;\n  align-items: center;\n  padding: 20px;\n  margin: 20px auto;\n  font-size: 24px;\n  border: 1px solid black;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 500;\n`;\n\nexport const InputForm = styled(Field)`\n  display: block;\n  padding: 10px 10px;\n  width: 300px;\n  background-color: white;\n  border: 2px solid grey;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 2px solid #4169e1;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: left;\n  margin-bottom: 20px;\n  color: #4169e1;\n  font: 0.7em 'typewriter', sans-serif;\n`;\n","import { Button } from '@chakra-ui/button';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nimport { Title, FormData, InputForm } from './LoginForm.styled';\nYupPassword(yup);\n\nconst initialValues = { email: '', password: '' };\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().password().required(),\n});\n\nexport const ErrorText = styled.p`\n  font: 0.6em 'typewriter', sans-serif;\n  color: red;\n  margin-top: 5px;\n`;\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (user, { resetForm }) => {\n    dispatch(logIn(user));\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        alidationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormData>\n          <Title>Log in</Title>\n          <label>\n            Email\n            <InputForm\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter\n        email\"\n            />\n            <FormError name=\"email\" component=\"div\" />\n          </label>\n          <label>\n            Password\n            <InputForm\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter password\"\n            />\n            <FormError name=\"password\" component=\"div\" />\n          </label>\n          <Button\n            size=\"md\"\n            height=\"48px\"\n            width=\"300px\"\n            colorScheme=\"blue\"\n            type=\"submit\"\n            marginTop={5}\n            fontSize=\"20px\"\n          >\n            Log In\n          </Button>\n        </FormData>\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["FormData","styled","Form","Title","InputForm","Field","YupPassword","yup","initialValues","email","password","schema","shape","required","ErrorText","FormError","name","render","message","dispatch","useDispatch","alidationSchema","onSubmit","user","resetForm","logIn","type","placeholder","component","size","height","width","colorScheme","marginTop","fontSize","Login","p","word","num","isNullOrUndefined","value","undefined","minLowercase","length","msg","this","test","exclusive","params","match","minUppercase","minNumbers","minSymbols","minRepeating","RegExp","minWords","rx","split","filter","v","min","max","module","exports","addMethod","string"],"sourceRoot":""}